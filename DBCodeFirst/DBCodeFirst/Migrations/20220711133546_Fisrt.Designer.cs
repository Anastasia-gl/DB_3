// <auto-generated />
using System;
using DBCodeFirst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBCodeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220711133546_Fisrt")]
    partial class Fisrt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DBCodeFirst.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirtsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Telephone")
                        .HasColumnType("bigint");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Email = "dhjkfk@sdk.co",
                            FirtsName = "John",
                            Lastname = "Smith",
                            Telephone = 958762012L
                        },
                        new
                        {
                            ClientId = 2,
                            Email = "aaak@sdk.co",
                            FirtsName = "Nastya",
                            Lastname = "Hlusenko",
                            Telephone = 958768012L
                        },
                        new
                        {
                            ClientId = 3,
                            Email = "lllk@sdk.co",
                            FirtsName = "Lena",
                            Lastname = "Lohvinova",
                            Telephone = 508768012L
                        },
                        new
                        {
                            ClientId = 4,
                            Email = "nnnk@sdk.co",
                            FirtsName = "Nastya",
                            Lastname = "Zemlyanskaya",
                            Telephone = 508766511L
                        },
                        new
                        {
                            ClientId = 5,
                            Email = "ssss@sdk.co",
                            FirtsName = "Alena",
                            Lastname = "Ss",
                            Telephone = 508876511L
                        });
                });

            modelBuilder.Entity("DBCodeFirst.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DBCodeFirst.Models.EmployeeProject", b =>
                {
                    b.Property<int>("EmployeeProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeProjectId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeProjectId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OfficeId");

                    b.ToTable("Office");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 200m,
                            ClientId = 1,
                            Name = "A",
                            StartedDate = new DateTime(2022, 7, 11, 16, 35, 45, 875, DateTimeKind.Local).AddTicks(5463)
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 200m,
                            ClientId = 2,
                            Name = "Б",
                            StartedDate = new DateTime(2022, 7, 11, 16, 35, 45, 875, DateTimeKind.Local).AddTicks(5494)
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 200m,
                            ClientId = 3,
                            Name = "В",
                            StartedDate = new DateTime(2022, 7, 11, 16, 35, 45, 875, DateTimeKind.Local).AddTicks(5496)
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 200m,
                            ClientId = 4,
                            Name = "Г",
                            StartedDate = new DateTime(2022, 7, 11, 16, 35, 45, 875, DateTimeKind.Local).AddTicks(5498)
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 200m,
                            ClientId = 5,
                            Name = "Д",
                            StartedDate = new DateTime(2022, 7, 11, 16, 35, 45, 875, DateTimeKind.Local).AddTicks(5500)
                        });
                });

            modelBuilder.Entity("DBCodeFirst.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TitleId");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Employee", b =>
                {
                    b.HasOne("DBCodeFirst.Models.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBCodeFirst.Models.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("DBCodeFirst.Models.EmployeeProject", b =>
                {
                    b.HasOne("DBCodeFirst.Models.Employee", "Employee")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBCodeFirst.Models.Project", "Project")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Project", b =>
                {
                    b.HasOne("DBCodeFirst.Models.Client", "Client")
                        .WithOne("Project")
                        .HasForeignKey("DBCodeFirst.Models.Project", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Client", b =>
                {
                    b.Navigation("Project")
                        .IsRequired();
                });

            modelBuilder.Entity("DBCodeFirst.Models.Employee", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Project", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DBCodeFirst.Models.Title", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
